import re
from pymorphy2 import MorphAnalyzer
from collections import Counter


class Analyzer:
    """
    Анализирует входящий текст, разбирает каждое слово на лексемы, убирает пунктуацию и все, кроме существительных,
    глаголов или прилагательных, а так же слова из списка запрещенных слов. Выдает 10 самых популярных из текущих слов.
    """

    def __init__(self, text_array):
        self.text_array = text_array
        self.morph = MorphAnalyzer()  # Составлено с помощью glvrd.ru, перебирая все 20 * 1700 слов вместе и вручную
        self.trash_list = \
            {"она", "они", "что", "это", "быть", "аплодисменты", "этот", "как", "если", "быть", "если", "для", "все",
             "этот", "чтобы", "так", "для", "который", "тот", "такой", "мой", "смех", "красивый", "дорогой", "уютный",
             "роскошный", "активный", "школа", "должный", "сделать", "наш", "мочь", "один", "весь", "свой", "речь",
             "человек", "слайд", "разный", "хотеть", "промышленность", "пытаться", "хороший", "позволять", "ваш",
             "решать", "общий", "продажа", "модуль", "множество", "оставлять", "важный", "решение", "заниматься",
             "служить", "реальность", "самка", "самец", "проводить", "известный", "таинственность", "быстрый",
             "большинство", "позволять", "обучение", "население", "настоящий", "необходимо", "любой", "большой",
             "форма", "успешный", "обычный", "оказываться", "высокий", "потрясающий", "богатый", "документ", "мелкий",
             "оказывать", "возможность", "простой", "крупный", "колония", "система", "реальный", "плохой", "мечтание",
             "огромный", "электрический", "ландшафт", "изломанность", "интерактивный", "суть", "позволять", "наличие",
             "иметься", "проводить", "обычный", "мощный", "аналогия", "различный", "самый", "эффективность", "низкий",
             "реальность", "определенный", "являться", "пользование", "исторический", "элементарный", "обеспечение",
             "наблюдаться", "обладать", "важный", "известняк", "хотеться", "продолжать", "год", "время", "мир", "жизнь",
             "дело", "проблема", "ребенок", "вопрос", "день", "друг", "работа", "идея", "история", "место", "часть",
             "вещь", "страна", "технология", "раз", "женщина", "слово", "вода", "вид", "проект", "информация", "мозг",
             "земля", "миллион", "город", "исследование", "помощь", "компания", "образ", "рука", "результат", "момент",
             "конец", "пример", "доллар", "дом", "книга", "музыка", "машина", "сторона", "случай", "процесс", "группа",
             "способ", "мужчина", "уровень", "тысяча", "интернет", "деньги", "семья", "компьютер", "энергия", "видео",
             "программа", "свет", "модель", "сила", "планета", "клетка", "движение", "тело", "наука", "общество",
             "язык", "фотография", "причина", "война", "пациент", "неделя", "миллиард", "будущее", "сеть", "точка",
             "сша", "игра", "отец", "природа", "изменение", "фильм", "цель", "устройство", "образование", "материал",
             "путь", "глаз", "студент", "африка", "отношение", "правительство", "болезнь", "связь", "количество",
             "звук", "парень", "искусство", "пространство", "организация", "ответ", "лицо", "час", "дизайн", "право",
             "поведение", "эксперимент", "лечение", "индия", "месяц", "мама", "карта", "мать", "здание", "изображение",
             "океан", "родитель", "внимание", "улица", "продукт", "развитие", "песня", "структура", "рынок", "процент",
             "голова", "минута", "чувство", "нога", "пара", "объект", "создание", "закон", "учитель", "действие"}

    def start(self):
        res = list(filter(
            lambda x: len(x) > 2 and self.pymorphy_analyze(x) and re.match("[а-яА-Я]", x) and x not in self.trash_list,
            self.text_array))
        return [x[0] for x in Counter(res).most_common(10)]

    def pymorphy_analyze(self, word):
        lexem = self.morph.parse(word)
        x = lexem[0].tag.POS
        if x == ("NOUN" or "ADJF" or "INFN"):
            return True
        return False
